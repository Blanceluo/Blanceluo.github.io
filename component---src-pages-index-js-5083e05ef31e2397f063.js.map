{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/esm/construct.js","webpack:///./src/pages/index.js"],"names":["Layout","header","location","title","children","isRootPath","pathname","className","to","data-is-root-path","style","textAlign","Date","getFullYear","target","rel","href","_setPrototypeOf","o","p","Object","setPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","prototype","toString","call","e","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","BlogIndex","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","length","listStyle","map","post","str","frontmatter","fields","slug","key","itemScope","itemType","itemProp","time","split","toLocaleDateString","replace","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"2FAAA,qCAqCeA,IAlCA,SAAC,GAAmC,IAG7CC,EAHYC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE3BC,EADQ,MACKH,EAASI,SAiB5B,OAbEL,EADEI,EAEA,wBAAIE,UAAU,gBACZ,kBAAC,OAAD,CAAMC,GAAG,KAAKL,IAKhB,kBAAC,OAAD,CAAMI,UAAU,mBAAmBC,GAAG,KACnCL,GAML,yBAAKI,UAAU,iBAAiBE,oBAAmBJ,GACjD,4BAAQE,UAAU,iBAAiBN,GACnC,8BAAOG,GACP,4BAAQM,MAAO,CAACC,UAAW,UAA3B,MACK,IAAIC,MAAOC,cACb,IACD,uBAAGC,OAAO,SAASC,IAAI,aAAaC,KAAK,6BAAzC,wB,kCC7BO,SAASC,EAAgBC,EAAGC,GAMzC,OALAF,EAAkBG,OAAOC,gBAAkB,SAAyBH,EAAGC,GAErE,OADAD,EAAEI,UAAYH,EACPD,IAGcA,EAAGC,GCNb,SAASI,IACtB,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAf,KAAKgB,UAAUC,SAASC,KAAKN,QAAQC,UAAUb,KAAM,IAAI,iBAClD,EACP,MAAOmB,GACP,OAAO,GCPI,SAAS,EAAWC,EAAQC,EAAMC,GAc/C,OAZE,EADE,IACWV,QAAQC,UAER,SAAoBO,EAAQC,EAAMC,GAC7C,IAAIC,EAAI,CAAC,MACTA,EAAEC,KAAKC,MAAMF,EAAGF,GAChB,IACIK,EAAW,IADGC,SAASC,KAAKH,MAAML,EAAQG,IAG9C,OADID,GAAO,EAAeI,EAAUJ,EAAMN,WACnCU,IAIOD,MAAM,KAAMI,W,uNCkDjBC,UAzDG,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMzC,EAAe,EAAfA,SACnB0C,GAAY,UAAAD,EAAKE,KAAKC,oBAAV,eAAwB3C,QAAxB,QACZ4C,EAAQJ,EAAKK,kBAAkBC,MACrC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQhD,SAAUA,EAAUC,MAAOyC,GACjC,kBAAC,IAAD,CAAKzC,MAAM,cACX,kBAAC,IAAD,MACA,yLAUJ,kBAAC,IAAD,CAAQD,SAAUA,EAAUC,MAAOyC,GACjC,kBAAC,IAAD,CAAKzC,MAAM,cACX,kBAAC,IAAD,MACA,wBAAIO,MAAO,CAAEyC,UAAU,SACpBJ,EAAMK,KAAI,SAAAC,GACT,IAzBMC,EAyBAnD,EAAQkD,EAAKE,YAAYpD,OAASkD,EAAKG,OAAOC,KAEpD,OACE,wBAAIC,IAAKL,EAAKG,OAAOC,MACnB,6BACElD,UAAU,iBACVoD,WAAS,EACTC,SAAS,6BAET,gCACE,4BACE,kBAAC,OAAD,CAAMpD,GAAI6C,EAAKG,OAAOC,KAAMI,SAAS,OACnC,0BAAMA,SAAS,YAAY1D,KAG/B,gCAxCFmD,EAwCkBD,EAAKE,YAAYO,KAxC5B,YAAIlD,KAAJ,YAAY0C,EAAIS,MAAM,OAAMC,qBAAqBC,QAAQ,MAAO,QA0CvE,iCACE,uBACEC,wBAAyB,CACvBC,OAAQd,EAAKE,YAAYa,aAAef,EAAKgB,SAE/CR,SAAS,yBActB,IAAMS,EAAS","file":"component---src-pages-index-js-5083e05ef31e2397f063.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer style={{textAlign: 'right'}}>\n        © {new Date().getFullYear()}\n        {' '}\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"http://beian.miit.gov.cn/\">\n          粤ICP备19150560号-1\n        </a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst fmtDate = str => new Date(...str.split('|')).toLocaleDateString().replace(/\\//g, '-')\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{fmtDate(post.frontmatter.time)}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          time\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}